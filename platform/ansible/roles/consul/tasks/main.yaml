---
- name: Allow run sudo commands without password
  community.general.sudoers:
    name: admin_role
    state: present
    user: "{{ admin_user }}"
    commands: ALL
  when: not bootstrapped_file.stat.exists

- name: Add HashiCorp GPG key
  ansible.builtin.apt_key:
    url: https://apt.releases.hashicorp.com/gpg
    state: present
  when: not bootstrapped_file.stat.exists

- name: Set distribution codename fact
  set_fact:
    distro_codename: "{{ ansible_distribution_release }}"
  when: not bootstrapped_file.stat.exists

- name: Add HashiCorp repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://apt.releases.hashicorp.com {{ distro_codename }} main"
    state: present
  when: not bootstrapped_file.stat.exists

- name: Update APT package index
  ansible.builtin.apt:
    update_cache: yes
  when: not bootstrapped_file.stat.exists

- name: Install Consul
  ansible.builtin.apt:
    name: consul
    state: latest

- name: Verify consul installation
  ansible.builtin.command: consul version
  register: consul_version_output

- name: Display consul version
  ansible.builtin.debug:
    msg: "Consul version installed: {{ consul_version_output.stdout }}"

- name: Create Consul user and group
  ansible.builtin.user:
    name: "{{ consul_user }}"
    state: present
    system: yes
    home: "{{ consul_data_dir }}"
    shell: /bin/false
  when: not bootstrapped_file.stat.exists

- name: Create Consul data and config directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: '0755'
  with_items:
    - "{{ consul_data_dir }}"
    - "{{ consul_config_dir }}"
  when: not bootstrapped_file.stat.exists

- name: Generate Consul encryption key
  command: /usr/bin/consul keygen
  register: consul_keygen_result
  when: not bootstrapped_file.stat.exists
  

- name: Set encryption key fact
  set_fact:
    consul_encryption_key: "{{ consul_keygen_result.stdout }}"
  when: not bootstrapped_file.stat.exists

- name: Create consul service
  ansible.builtin.template:
    src: templates/config.json.j2
    dest: "{{ consul_config_dir }}/config.json"
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: '0644'
  when: not bootstrapped_file.stat.exists

- name: Create consul service
  ansible.builtin.template:
    src: templates/consul.service.j2
    dest: "{{ consul_service_file }}"
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: '0644'
  when: not bootstrapped_file.stat.exists

- name: Reload systemd to pick up new service
  ansible.builtin.systemd:
    daemon_reload: yes
  when: not bootstrapped_file.stat.exists

- name: Start and enable Consul service
  ansible.builtin.systemd:
    name: consul
    state: started
    enabled: yes
  when: not bootstrapped_file.stat.exists

- name: Create bootstrapped file
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/bootstrapped"
    state: touch
  when: not bootstrapped_file.stat.exists